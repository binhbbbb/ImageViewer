<?xml version="1.0" encoding="UTF-8"?>
<project name="Calendar" basedir="../" default="all">

    <!-- Main target that does all -->
    <target name="all" depends="clean-all, compile, widgetset, package-jar, package-zip, demo.war"/>

    <!-- Non-project specific settings. -->
	<property file="build/build.properties" />
	<property name="configure.libs" value="" />

    <!-- ================================================================== -->
    <!-- Initialization                                                     -->
    <!-- ================================================================== -->

    <!-- Clean old compilation results. -->
	<target name="clean-all">
		<delete dir="${result-path}" includes="**/*" followsymlinks="false"
			includeemptydirs="true" defaultexcludes="false" failonerror="false"/>
	</target>

    <!-- Checks that all the required libraries exist. -->
	<target name="check-libs">
		<available file="${gwt.lib.dir}/gwt-user.jar" property="gwt-user.present" />
		<available file="${gwt.lib.dir}/gwt-dev.jar" property="gwt-dev.present" />
		<available file="${dependency.gwt-image-loader.dir}/${dependency.gwt-image-loader}"
			property="gwt-image-loader.present" />
		<fail message="${dependency.gwt-image-loader.dir}/${dependency.gwt-image-loader} missing"
			unless="gwt-image-loader.present" />
		<fail message="${gwt.lib.dir}/gwt-user.jar missing" unless="gwt-user.present" />
		<fail message="${gwt.lib.dir}/gwt-dev.jar missing" unless="gwt-dev.present" />
	</target>

    <!-- Initialization -->
	<target name="init">
		<echo>Requirements for classpath:</echo>
		<echo> ${gwt.lib.dir}/gwt-user.jar</echo>
		<echo> ${gwt.lib.dir}/gwt-dev.jar</echo>
		<echo> ${dependency.gwt-image-loader.dir}/${dependency.gwt-image-loader}</echo>
        <property name="base-name" value="${addon.name}-${version}" />
        <property name="jar.name" value="${base-name}.jar"/>
        <property name="jar.path" value="${result-path}/${jar.name}"/>
		<antcall target="check-libs"/>
	    <path id="compile.classpath">
		    <fileset dir="build/lib">
			    <include name="**/*.jar" />
            </fileset>
            <fileset dir="WebContent/WEB-INF/lib">
                <include name="**/*.jar" />
            </fileset>
        </path>
	</target>

   <!-- ================================================================== -->
    <!-- Compilation                                                        -->
    <!-- ================================================================== -->

    <!-- Compile server-side Java -->
	<target name="compile" depends="init">
		<echo>Compiling server side...</echo>
        <property name="result.classes" value="${result-path}/war/WEB-INF/classes"/>
        <mkdir dir="${result.classes}"/>
		 <javac destdir="${result.classes}" target="1.5" source="1.5"> 
		 	<src path="src/${src.package.dir}" />		 	
			<src path="${demo.src.base}" />
			<include name="**/*.*" />
			<classpath refid="compile.classpath" />
			<classpath>
				<path path="WebContent/WEB-INF/classes" />
				<path path="${gwt.lib.dir}/gwt-user.jar" />
				<path path="${gwt.lib.dir}/gwt-dev.jar" />
			</classpath>
		</javac>
	</target>

    <!-- Compile client-side Java -->
	<target name="widgetset" depends="init">
		<echo>Compiling widgetset...</echo>
		<java classname="com.vaadin.tools.WidgetsetCompiler" failonerror="yes" fork="yes" maxmemory="512m">
			<arg value="-out" />
			<arg value="WebContent/VAADIN/widgetsets/" />
			<arg value="${addon.widgetset}" />
			<jvmarg value="-Xss1024k" />
			<jvmarg value="-Xmx1024M" />
			<jvmarg value="-Djava.awt.headless=true" />
			<classpath>
				<path path="src" />
				<path path="${basedir}/${result-path}/war/WEB-INF/classes" />
				<path path="WebContent/WEB-INF/classes" />
				<fileset dir="build/lib">
					<include name="**/gwt-*.jar" />
				</fileset>
				<fileset dir="WebContent/WEB-INF/lib">
					<include name="**/*.jar" />
				</fileset>
			</classpath>
		</java>
	</target>

    <!-- ================================================================== -->
    <!-- Packaging                                                          -->
    <!-- ================================================================== -->

    <!-- Create the JAR package [Note: JAR is not functional by itself]. -->
    <target name="package-jar" depends="compile" unless="run.no-package-jar">
    	<echo>Creating ${addon.title} JAR...</echo>
        <jar jarfile="${jar.path}" compress="true">
            <manifest>
                <attribute name="Vaadin-Package-Version" value="1" />
                <attribute name="Vaadin-Widgetsets" value="${addon.widgetset}" />
                <attribute name="Implementation-Title" value="${addon.title}" />
                <attribute name="Implementation-Version" value="${version}" />
                <attribute name="Implementation-Vendor" value="${addon.vendor}" />
            </manifest>
        	<!-- The built server-side classes and the widget set class are here. -->
            <fileset dir="${result.classes}">
                <patternset>
                    <include name="${src.package.dir}/**/*" />
                	<exclude name="**/demo/**" />
                </patternset>
            </fileset> 
        	<!-- Include sources. -->
        	<fileset dir="src">
                <patternset>
                	<include name="${src.package.dir}/**/*" />
                	<exclude name="**/demo/**" />
                </patternset>
            </fileset>
        </jar>
	</target>		

    <!-- Create the ZIP distribution package. -->
    <target name="package-zip" depends="package-jar">
    	<echo>Creating ${addon.title} ZIP...</echo>
        <property name="zip.name" value="${result-path}/${addon.name}-${version}.zip"/>
    	<!-- Make the zip manifest -->
    	<mkdir dir="${result-path}/META-INF"/>
    	<echo file="${result-path}/META-INF/MANIFEST.MF">Vaadin-Addon: ${addon.name}-${version}/${jar.name}
Vaadin-Package-Version: 1
Implementation-Title: ${addon.title}
Implementation-Version: ${version}
Implementation-Vendor: ${addon.vendor}
Vaadin-Dependency: ${dependency.gwt-image-loader}
       </echo>         
        <zip destfile="${zip.name}">
        	<zipfileset dir="${result-path}" includes="META-INF/MANIFEST.MF" />
            <!-- The add-on library itself -->
            <zipfileset prefix="${addon.name}-${version}" file="${result-path}/${jar.name}" />
        	<!-- Dependency: GWT Image Loader -->
        	<zipfileset prefix="" file="${dependency.gwt-image-loader.dir}/${dependency.gwt-image-loader}" />
            <!-- Readme file -->
            <zipfileset prefix="doc" dir="doc">
                <patternset>
                    <include name="readme.txt" />
                </patternset>
            </zipfileset>
        </zip>
    </target>

	<!-- Create demo application WAR -->
	<target name="demo.war" depends="package-jar">
		<echo>Creating ${addon.title} Demo Application WAR...</echo>
        <property name="war.path" value="${result-path}/${addon.name}.war"/>
	 	<war destfile="${war.path}" webxml="WebContent/WEB-INF/web.xml">
			<classes dir="${result.classes}"/>
			<lib dir="WebContent/WEB-INF/lib" excludes="*src*" />
			<lib file="${jar.path}" />
		 	<fileset dir="WebContent">
		 		<patternset>
		 			<include name="VAADIN/widgetsets/${addon.widgetset}/**/*" />
		 			<include name="VAADIN/themes/**/*" />
		 		</patternset>
			</fileset>
		</war>
	</target>
</project>